#include<bits/stdc++.h>
using namespace std;
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
	int kthSmallest(TreeNode* root, int k) {
		vector < int > inorder;
		int cnt = 0, ans = -1;
		TreeNode * cur = root;
		while (cur != NULL) {
			if (cur -> left == NULL) {
				inorder.push_back(cur -> val);
				cnt++;
				if (cnt == k) {
					ans = cur->val;
					break;
				}
				cur = cur -> right;
			} else {
				TreeNode * prev = cur -> left;
				while (prev -> right != NULL && prev -> right != cur) {
					prev = prev -> right;
				}
				if (prev -> right == NULL) {
					prev -> right = cur;
					cur = cur -> left;
				} else {
					prev -> right = NULL;
					inorder.push_back(cur -> val);
					cnt++;
					if (cnt == k) {
						ans = cur->val;
						break;
					}
					cur = cur -> right;
				}
			}
		}
		return ans;
	}
};





